__NUXT_JSONP__("/tutoriales/botones-en-microbit-con-python", (function(a,b,c,d,e,f,g,h,i,j,k){c[0]="migueabellan";k.cdate="2019-02-11 13:42:34";k.mdate="2019-10-26 14:05:12";return {data:[{tutorial:{alias:"botones-en-microbit-con-python",title:a,description:b,image:"img\u002Fpreview.jpg",contributors:c,tags:{technology:[d,e],hardware:[f],software:[g],level:[h,i],others:[]},extra:{level:"Medio",duration:"30 minutos",videos:j},date:k},title:a,description:b,image:"https:\u002F\u002Fraw.githubusercontent.com\u002FProgramoErgoSum\u002FTutoriales\u002Fmaster\u002Fv1\u002Fbotones-en-microbit-con-python\u002Fimg\u002Fpreview.jpg",date:k,tags:[d,e,f,g,h,i],editLink:"https:\u002F\u002Fgithub.com\u002FProgramoErgoSum\u002FTutoriales\u002Fedit\u002Fmaster\u002Fv1\u002Fbotones-en-microbit-con-python\u002FREADME.md",contributors:c,raw:"## Introducción\n\nEn este tutorial vamos a explicar cómo utilizar los botones de micro:bit para interactuar con ellos y construir diferentes programas utilizando el lenguaje de programación MicroPython.\n\n### Antes de empezar\n\nVas a necesitar los siguientes componentes:\n\n- Raspberry Pi con Raspbian\n- Micro:Bit\n\n\n\n\u003Cbr \u002F\u003E\n\n\n\n## Botones en Micro:bit\n\nLa placa Micro:bit consta de 2 botones en la parte frontal situados a la izquierda y a la derecha bajo las serigrafías `A` y `B` respectivamente.\n\n\u003E Puedes acceder a la referencia de los [botones](https:\u002F\u002Fmicrobit-micropython.readthedocs.io\u002Fen\u002Flatest\u002Ftutorials\u002Fbuttons.html) desde la documentación oficial de Micro:bit.\n\n\n\n\u003Cbr \u002F\u003E\n\n\n\n## Función is_pressed()\n\nLa primera función que vamos a ver es `is_pressed()` encargada de comprobar si hemos pulsado un botón. Sin embargo, a esta función tiene que añadirse el botón en concreto que estamos pulsando `button_a` o `button_b`. De tal manera que el código encargado de comprobar si estamos pulsando el botón A será `button_a.is_pressed()`.\n\nEn el siguiente ejemplo vamos a mostrar imágenes en la matriz de LEDs. Una cara feliz `Image.Happy` si estamos pulsando el botón y en caso contrario una cara triste `Image.SAD`.\n\n```python\nfrom microbit import *\n\nwhile True:\n   if button_a.is_pressed():\n      display.show(Image.HAPPY)\n   else:\n      display.show(Image.SAD)\n```\n\n\n\n\u003Cbr \u002F\u003E\n\n\n\n## Función get_presses()\n\nCon esta función podemos capturar las veces que hemos pulsado un determinado botón. El valor devuelto por la función es un número, con lo cual, si queremos mostrarlo por la matriz de LEDs debemos transformarlo a cadena (string) utilizando la función `str()`.\n\nPor ejmplo, vamos a mostrar por la matriz de led las veces que hemos pulsado el botón A. Para ello, tenemos que esperar 5 segundos utilizando la función `sleep()` hasta que se muestre el número en la matriz de LEDs.\n\n```python\nfrom microbit import *\n\nsleep(5000) # 5000 milisegundos = 5 segundos\n\npulsaciones = str(button_a.get_presses())\n\ndisplay.show(pulsaciones)\n\n# En caso de más de 1 dígito utilizar la función display.scroll()\ndisplay.scroll(pulsaciones)\n```\n\n\n\n\u003Cbr \u002F\u003E\n\n\n\n## Ejercicios propuestos\n\n1.- Muestra la imagen de un corazón cada vez que pulses el botón A.\n\n2.- Muestra la palabra 'IZQUIERDA' se pulsa el botón A o 'DERECHA' si se pulsa el botón B.\n\n3.- Enciende todos los LEDs si pulsas ambos botones A y B al mismo tiempo durante 5 segundos.\n",cdn:"https:\u002F\u002Fraw.githubusercontent.com\u002FProgramoErgoSum\u002FTutoriales\u002Fmaster\u002Fv1\u002Fbotones-en-microbit-con-python\u002F",breadcrumbs:[{text:"Tutoriales",disabled:false,to:"\u002Ftutoriales"},{text:a,disabled:true,to:j}]}],fetch:[],mutations:[]}}("Botones en Microbit con Python","Utiliza los botones de Micro:bit con MicroPython.",Array(1),"Electrónica","Programación","Micro:bit","Python","Secundaria","Bachillerato","",{})));