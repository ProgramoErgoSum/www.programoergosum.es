__NUXT_JSONP__("/tutoriales/introduccion-a-pines-gpio-en-raspbian", (function(a,b,c,d,e,f,g,h,i,j,k,l){c[0]="migueabellan";l.cdate="2019-04-01 00:00:00";l.mdate="2019-10-26 14:05:12";return {data:[{tutorial:{alias:"introduccion-a-pines-gpio-en-raspbian",title:a,description:b,image:"img\u002Fpreview.jpg",contributors:c,tags:{technology:[d],hardware:[e],software:[f],level:[g,h],others:[i,j]},extra:{level:"Medio",duration:"45 minutos",videos:k},date:l},title:a,description:b,image:"https:\u002F\u002Fraw.githubusercontent.com\u002FProgramoErgoSum\u002FTutoriales\u002Fmaster\u002Fv1\u002Fintroduccion-a-pines-gpio-en-raspbian\u002Fimg\u002Fpreview.jpg",date:l,tags:[d,e,f,g,h,i,j],editLink:"https:\u002F\u002Fgithub.com\u002FProgramoErgoSum\u002FTutoriales\u002Fedit\u002Fmaster\u002Fv1\u002Fintroduccion-a-pines-gpio-en-raspbian\u002FREADME.md",contributors:c,raw:"## Introducción\n\nEn este tutorial vamos a programar en Python los pines GPIO de nuestra Raspberry Pi para interactuar con ellos.\n\n### Antes de empezar\n\nVas a necesitar los siguientes componentes:\n\n- Raspberry Pi con Raspbian\n\n\n\n\u003Cbr \u002F\u003E\n\n\n\n## Pines GPIO\n\nGeneral Purpose Input Output (GPIO) es un sistema de entrada y salida de propósito general, es decir, consta de una serie de pines o conexiones que se pueden usar como entradas o salidas para múltiples usos. Estos pines están incluidos en todos los modelos de Raspberry Pi aunque con diferencias.\n\n![](img\u002Fpines-gpio.jpg \"Pines GPIO\")\n\nHay que tener en cuenta que dependiendo del modelo de la Raspberry Pi encontramos una cantidad de pines diferentes, por ejemplo, en la versión 1 de Raspberry Pi se tienen 26 pines GPIO mientras que a partir de la versión 2 de Raspberry Pi el número de pines aumentó a 40. Sin embargo la compatibilidad es total, puesto que los 26 primeros pines mantienen su función original.\n\nUna forma sencilla de ver el pinout de nuestra Raspberry Pi es introduciendo el comando `gpio readall`.\n\n```sh\npi@raspberrypi:~ $ gpio readall\n +-----+-----+---------+------+---+---Pi 2---+---+------+---------+-----+-----+\n | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |\n +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+\n |     |     |    3.3v |      |   |  1 || 2  |   |      | 5v      |     |     |\n |   2 |   8 |   SDA.1 |   IN | 1 |  3 || 4  |   |      | 5v      |     |     |\n |   3 |   9 |   SCL.1 |   IN | 1 |  5 || 6  |   |      | 0v      |     |     |\n |   4 |   7 | GPIO. 7 |   IN | 1 |  7 || 8  | 0 | IN   | TxD     | 15  | 14  |\n |     |     |      0v |      |   |  9 || 10 | 1 | IN   | RxD     | 16  | 15  |\n |  17 |   0 | GPIO. 0 |   IN | 0 | 11 || 12 | 0 | IN   | GPIO. 1 | 1   | 18  |\n |  27 |   2 | GPIO. 2 |   IN | 0 | 13 || 14 |   |      | 0v      |     |     |\n |  22 |   3 | GPIO. 3 |   IN | 0 | 15 || 16 | 0 | IN   | GPIO. 4 | 4   | 23  |\n |     |     |    3.3v |      |   | 17 || 18 | 0 | IN   | GPIO. 5 | 5   | 24  |\n |  10 |  12 |    MOSI |   IN | 0 | 19 || 20 |   |      | 0v      |     |     |\n |   9 |  13 |    MISO |   IN | 0 | 21 || 22 | 0 | IN   | GPIO. 6 | 6   | 25  |\n |  11 |  14 |    SCLK |   IN | 0 | 23 || 24 | 1 | IN   | CE0     | 10  | 8   |\n |     |     |      0v |      |   | 25 || 26 | 1 | IN   | CE1     | 11  | 7   |\n |   0 |  30 |   SDA.0 |   IN | 1 | 27 || 28 | 1 | IN   | SCL.0   | 31  | 1   |\n |   5 |  21 | GPIO.21 |   IN | 1 | 29 || 30 |   |      | 0v      |     |     |\n |   6 |  22 | GPIO.22 |   IN | 1 | 31 || 32 | 0 | IN   | GPIO.26 | 26  | 12  |\n |  13 |  23 | GPIO.23 |   IN | 0 | 33 || 34 |   |      | 0v      |     |     |\n |  19 |  24 | GPIO.24 |   IN | 0 | 35 || 36 | 0 | IN   | GPIO.27 | 27  | 16  |\n |  26 |  25 | GPIO.25 |   IN | 0 | 37 || 38 | 0 | IN   | GPIO.28 | 28  | 20  |\n |     |     |      0v |      |   | 39 || 40 | 0 | IN   | GPIO.29 | 29  | 21  |\n +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+\n | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |\n +-----+-----+---------+------+---+---Pi 2---+---+------+---------+-----+-----+\n```\n\n\n\n\u003Cbr \u002F\u003E\n\n\n\n## Salidas digitales\n\nEn primer lugar se importa la librería `GPIO` y `time`. Vamos a utilizar el pin situado en su posición de la placa 7. La siguiente instrucción será la inicialización del pin, es decir, los pines pueden ser utilizados como entradas o salidas. Por último, solamente nos quedará activar (True) o desactivar (False) el pin seleccionado. Para ello, se va a situar el código dentro de un bucle infinito.\n\n```python\nimport RPi.GPIO as GPIO\nimport time\n\nGPIO.setmode(GPIO.BOARD)\nGPIO.setup(7, GPIO.OUT)\n\nwhile True:\n  GPIO.output(7, True)\n  time.sleep(1)\n  GPIO.output(7, False)\n  time.sleep(1)\n```\n\n![](img\u002Fsalida-digital.jpg \"Salidas digitales\")\n\n\n\n\u003Cbr \u002F\u003E\n\n\n\n## Entradas digitales\n\nEl interruptor lo declaramos de tipo entrada y en la condición se puede observar que al pulsar sobre el botón se encenderá el led situado en la posición 7 de nuestro pin GPIO y en caso contrario se apagará.\n\n```python\nimport RPi.GPIO as GPIO\nimport time\n\nGPIO.setmode(GPIO.BOARD)\nGPIO.setup(3, GPIO.IN)\nGPIO.setup(7, GPIO.OUT)\n\nwhile True:\n  if GPIO.input(3):\n    GPIO.output(7, False)\n  else:\n    GPIO.output(7, True)\n```\n\n![](img\u002Fentrada-digital.jpg \"Entradas digitales\")\n\n\n\n\u003Cbr \u002F\u003E\n\n\n\n## Ejercicios propuestos\n\n1.- Programa un led intermitente en Python utilizando los pines GPIO.\n\n2.- Programa un sencillo semáforo utilizando los pines GPIO con Python.\n",cdn:"https:\u002F\u002Fraw.githubusercontent.com\u002FProgramoErgoSum\u002FTutoriales\u002Fmaster\u002Fv1\u002Fintroduccion-a-pines-gpio-en-raspbian\u002F",breadcrumbs:[{text:"Tutoriales",disabled:false,to:"\u002Ftutoriales"},{text:a,disabled:true,to:k}]}],fetch:[],mutations:[]}}("Primeros pasos con Pines GPIO en Raspberry Pi","Programación en Python de los pines GPIO en Raspberry Pi.",Array(1),"Programación","Raspberry Pi","Python","Secundaria","Bachillerato","Raspbian","GPIO","",{})));